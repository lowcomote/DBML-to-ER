grammar at.jku.se.dbml.DBML hidden(WS, ML_COMMENT, SL_COMMENT)
 
generate dBML "http://www.jku.at/se/dbml/DBML"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
	(statements+=Statement)*;
	
Statement:
	Table | Ref;

Table:
	'Table' '"' name=ID '"' '{'
		attributes += Attribute*
	('Indexes' '{' Index+ '}')?
	'}';
	
Index: (ID | '(' ID (',' ID)+ ')') '[' ('unique,')? ('pk' | 'name:' '"' ID '"') ']';
	
Attribute:
	'"' name=ID '"' type=Type ('[' options+=Optional ("," options+=Optional)* ']')?;

Optional:
	'pk' |
	'not' 'null' |
	'increment'
;

Type:
	'BOOLEAN' |
	'BIT' |
	'INT' |
	'INTEGER' |
	'FLOAT' |
	'TINYINT' ('(' INT ')')? |
	'BIGINT' |
	'SMALLINT' |
	'BYTE' |
	'TIMESTAMP' |
	'DATE' |
	'DATETIME' |
	'TEXT' |
	'LONGTEXT' |
	'MEDIUMTEXT' ('(' INT ')')?|
	'CHAR(' INT ')' |
	'VARCHAR(' INT ')' |
	'NCHAR(' INT ')' |
	'NVARCHAR(' INT ')' |
	'DECIMAL(' INT ',' INT ')' |
	'DOUBLE'('(' INT ',' INT ')')? |
	'timestamp('INT')' |
	'jsonb' |
	'json' |
	'JSON'
;
	
Ref:
	'Ref'(':')? ('"'ID'":')? left=NestedRef '<' right=NestedRef;

NestedRef:
	'"'table=[Table]'"' "." '"'attr=ID'"'
;

	
terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
terminal INT returns ecore::EInt: ('0'..'9')+;
terminal ML_COMMENT : '/*' -> '*/';
terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;

terminal WS         : (' '|'\t'|'\r'|'\n')+;

terminal ANY_OTHER: .;